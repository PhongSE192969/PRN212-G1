// <auto-generated />
using System;
using BubbleTeaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BubbleTeaApp.Migrations
{
    [DbContext(typeof(BubbleTeaDbContext))]
    partial class BubbleTeaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BubbleTeaApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BubbleTeaApp.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BubbleTeaApp.Models.OrderTopping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ToppingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderDetailId");

                    b.HasIndex("ToppingId");

                    b.ToTable("OrderToppings");
                });

            modelBuilder.Entity("BubbleTeaApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Trà Sữa",
                            Description = "Trà sữa nguyên bản",
                            ImageUrl = "",
                            Name = "Trà Sữa Truyền Thống",
                            Price = 35000m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Trà Sữa",
                            Description = "Trà sữa vị matcha Nhật Bản",
                            ImageUrl = "",
                            Name = "Trà Sữa Matcha",
                            Price = 40000m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Trà Sữa",
                            Description = "Trà sữa socola ngọt ngào",
                            ImageUrl = "",
                            Name = "Trà Sữa Socola",
                            Price = 42000m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Trà Sữa",
                            Description = "Trà sữa dâu tây tươi",
                            ImageUrl = "",
                            Name = "Trà Sữa Dâu Tây",
                            Price = 45000m
                        },
                        new
                        {
                            Id = 5,
                            Category = "Trà Sữa",
                            Description = "Trà sữa khoai môn thơm béo",
                            ImageUrl = "",
                            Name = "Trà Sữa Khoai Môn",
                            Price = 38000m
                        },
                        new
                        {
                            Id = 6,
                            Category = "Trà Trái Cây",
                            Description = "Trà đào cam sả tươi mát",
                            ImageUrl = "",
                            Name = "Trà Đào Cam Sả",
                            Price = 35000m
                        },
                        new
                        {
                            Id = 7,
                            Category = "Trà Trái Cây",
                            Description = "Trà chanh dây chua ngọt",
                            ImageUrl = "",
                            Name = "Trà Chanh Dây",
                            Price = 32000m
                        },
                        new
                        {
                            Id = 8,
                            Category = "Trà Trái Cây",
                            Description = "Trà vải thơm ngon",
                            ImageUrl = "",
                            Name = "Trà Vải",
                            Price = 33000m
                        },
                        new
                        {
                            Id = 9,
                            Category = "Sinh Tố",
                            Description = "Sinh tố bơ béo ngậy",
                            ImageUrl = "",
                            Name = "Sinh Tố Bơ",
                            Price = 40000m
                        },
                        new
                        {
                            Id = 10,
                            Category = "Sinh Tố",
                            Description = "Sinh tố mãng cầu",
                            ImageUrl = "",
                            Name = "Sinh Tố Mãng Cầu",
                            Price = 38000m
                        });
                });

            modelBuilder.Entity("BubbleTeaApp.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Trân Châu Đen",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Trân Châu Trắng",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thạch Dừa",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thạch Phô Mai",
                            Price = 7000m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pudding Trứng",
                            Price = 7000m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thạch Rau Câu",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Kem Cheese",
                            Price = 10000m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Đậu Đỏ",
                            Price = 5000m
                        });
                });

            modelBuilder.Entity("BubbleTeaApp.Models.OrderDetail", b =>
                {
                    b.HasOne("BubbleTeaApp.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BubbleTeaApp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BubbleTeaApp.Models.OrderTopping", b =>
                {
                    b.HasOne("BubbleTeaApp.Models.OrderDetail", "OrderDetail")
                        .WithMany("OrderToppings")
                        .HasForeignKey("OrderDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BubbleTeaApp.Models.Topping", "Topping")
                        .WithMany()
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderDetail");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("BubbleTeaApp.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BubbleTeaApp.Models.OrderDetail", b =>
                {
                    b.Navigation("OrderToppings");
                });
#pragma warning restore 612, 618
        }
    }
}
